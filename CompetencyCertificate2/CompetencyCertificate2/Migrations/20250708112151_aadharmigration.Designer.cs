// <auto-generated />
using System;
using CompetencyCertificate.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompetencyCertificate.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250708112151_aadharmigration")]
    partial class aadharmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompetencyCertificate.Models.Contractor", b =>
                {
                    b.Property<string>("ContractorName")
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ContractorName");

                    b.ToTable("Contractor");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Department", b =>
                {
                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("DepartmentName");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Designation", b =>
                {
                    b.Property<string>("Designation_Name")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("DesignationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("designation_type")
                        .HasColumnType("int");

                    b.HasKey("Designation_Name");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Employee", b =>
                {
                    b.Property<string>("Employee_id")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("AadharNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("CategoryName")
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ContractorName")
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Designation_Name")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EPF_UAN_NO")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ESA_NO")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmerContactNo")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Employee_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Employee_type")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("date");

                    b.Property<byte[]>("Passbook")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PassbookBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhotoBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Employee_id");

                    b.HasIndex("ContractorName");

                    b.HasIndex("DepartmentName");

                    b.HasIndex("Designation_Name");

                    b.HasIndex("SubDepartmentName");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.EmployeeLogin", b =>
                {
                    b.Property<string>("employee_id")
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(60)");

                    b.HasKey("employee_id");

                    b.ToTable("EmployeeLogin");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Generated", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(60)");

                    b.Property<byte[]>("CompetencyCertificate")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Validity")
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Generated");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.HRLogin", b =>
                {
                    b.Property<string>("employee_id")
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<string>("Password")
                        .HasColumnType("NVARCHAR(60)");

                    b.HasKey("employee_id");

                    b.ToTable("HRLogin");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Initiate", b =>
                {
                    b.Property<string>("employee_id")
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("employee_id");

                    b.ToTable("Initiate");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.SubDepartment", b =>
                {
                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("SubDepartmentName");

                    b.HasIndex("DepartmentName");

                    b.ToTable("SubDeparment");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Employee", b =>
                {
                    b.HasOne("CompetencyCertificate.Models.Contractor", "Contractor")
                        .WithMany("Employees")
                        .HasForeignKey("ContractorName");

                    b.HasOne("CompetencyCertificate.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentName");

                    b.HasOne("CompetencyCertificate.Models.Designation", "Designation")
                        .WithMany("Employees")
                        .HasForeignKey("Designation_Name");

                    b.HasOne("CompetencyCertificate.Models.SubDepartment", "SubDepartment")
                        .WithMany("Employees")
                        .HasForeignKey("SubDepartmentName");

                    b.Navigation("Contractor");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("SubDepartment");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.EmployeeLogin", b =>
                {
                    b.HasOne("CompetencyCertificate.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Generated", b =>
                {
                    b.HasOne("CompetencyCertificate.Models.Employee", "Employee")
                        .WithMany("Generated")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Initiate", b =>
                {
                    b.HasOne("CompetencyCertificate.Models.Employee", "Employee")
                        .WithMany("Initiate")
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.SubDepartment", b =>
                {
                    b.HasOne("CompetencyCertificate.Models.Department", "Department")
                        .WithMany("SubDepartments")
                        .HasForeignKey("DepartmentName");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Contractor", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("SubDepartments");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Designation", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.Employee", b =>
                {
                    b.Navigation("Generated");

                    b.Navigation("Initiate");
                });

            modelBuilder.Entity("CompetencyCertificate.Models.SubDepartment", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
